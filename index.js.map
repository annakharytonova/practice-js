{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["// TASK 1\n\n// Якщо емейл і пароль користувача збігаються, зберігати дані з форми при сабміті у локальне сховище\n// і змінюй кнопку login на logout і роби поля введення недоступними для змін.\n\n// При перезавантаженні сторінки, якщо користувавч залогінений ми маємо бачити logout - кнопку та недоступні для змін поля з даними користувача.\n\n// Клік по кнопці logout повертає вас до початкового вигляду і видаляє дані користувача з локального сховища.\n\n// Якщо введені дані не збігаються з потрібними даними викликайте alert і повідомляйте про помилку.\n\n// const USER_DATA = {\n//   email: 'user@mail.com',\n//   password: 'secret',\n// };\n\n// const LS_KEY = 'user-data';\n\n// const form = document.querySelector('.login-form');\n// const btn = document.querySelector('.login-form button');\n// const email = document.querySelector('[name=\"email\"]');\n// const password = document.querySelector('[name=\"password\"]');\n\n// form.addEventListener('submit', handleSubmit);\n\n// function handleSubmit(event) {\n//   event.preventDefault();\n//   const emailValue = email.value.trim();\n//   const passwordValue = password.value.trim();\n\n//   if (btn.textContent === 'Logout') {\n//     form.reset();\n\n//     localStorage.removeItem(LS_KEY);\n//     btn.textContent = 'Login';\n//     email.removeAttribute('readonly');\n//     password.removeAttribute('readonly');\n//     return;\n//   }\n\n//   if (emailValue === '' || passwordValue === '') {\n//     return alert('Fill all fields!');\n//   }\n\n//   if (emailValue === USER_DATA.email && passwordValue === USER_DATA.password) {\n//     localStorage.setItem(\n//       LS_KEY,\n//       JSON.stringify({ email: emailValue, password: passwordValue })\n//     );\n//     btn.textContent = 'Logout';\n//     email.setAttribute('readonly', true);\n//     password.setAttribute('readonly', true);\n//   } else {\n//     alert('Wrong data!');\n//   }\n// }\n\n// if (localStorage.getItem(LS_KEY)) {\n//   const parsedData = JSON.parse(localStorage.getItem(LS_KEY));\n//   email.value = parsedData.email || '';\n//   password.value = parsedData.password || '';\n//   btn.textContent = 'Logout';\n//   email.setAttribute('readonly', true);\n//   password.setAttribute('readonly', true);\n// }\n\n// TASK 2\n\n// Використовуй prompt та повертай значення звідти.\n// Створи функцію яка буде набувати значення з prompt і повертати проміс.\n// Якщо значення не є числом повертай проміс та логіруй \"error\".\n// Якщо значення парне, вирішуй проміс та повертай \"even\" через 1 сек.\n// Якщо значення непарне, вирішуй проміс та повертай \"odd\" через 2 сек.\n\n// const promptValue = prompt('Enter value');\n\n// function handlePrompt(promptValue) {\n//   return new Promise((resolve, reject) => {\n//     const promptValueNum = Number(promptValue);\n//     if (isNaN(promptValueNum)) {\n//       reject('error');\n//     }\n//     if (promptValueNum % 2 === 0) {\n//       setTimeout(() => {\n//         resolve('even');\n//       }, 1000);\n//     }\n//     if (!promptValueNum % 2 === 0) {\n//       setTimeout(() => {\n//         resolve('odd');\n//       }, 2000);\n//     }\n//   });\n// }\n\n// handlePrompt(promptValue)\n//   .then(response => console.log(response))\n//   .catch(reject => console.log(error));\n\n// TASK 3\n\n// Додай зображення дати і часу в реальному часі.\n\n// const currentData = new Date().toLocaleString('ua');\n// const setData = document.querySelector('.data span');\n\n// update();\n// function update() {\n//   setData.textContent = new Date().toLocaleString('ua');\n// }\n// setData.textContent = currentData;\n\n// setInterval(update, 1000);\n\n// TASK 4\n\n// Напиши функцію calculateAge(birthData), яка приймає дату народження у форматі YYYY-MM-DD і повертає поточний вік.\n// Підказка: Використайте обєкт Data для обчислення різниці між сьогоднішньою датою і датою народження.\n\n// function calculateAge(birthData) {\n//   const currentDate = new Date();\n//   const birth = new Date(birthData);\n//   let different = currentDate.getFullYear() - birth.getFullYear();\n//   const monthDifferent = currentDate.getMonth() - birth.getMonth();\n//   const dateDifferent = currentDate.getDate() - birth.getDate();\n\n//     console.log(monthDifferent);\n//     console.log(dateDifferent);\n//     console.log(different);\n\n//   if (monthDifferent < 0 || (dateDifferent < 0 && monthDifferent === 0)) {\n//     different -= 1;\n//   }\n//   return different;\n// }\n\n// console.log(calculateAge('1988-12-17'));\n\n// TASK 5\n\n// Зробити перемикач теми. Зберігати тему у локальне сховище.\n// При перезавантаженні сторінки перевіряти сховище та ставити тему, яка там вказана.\n// Додати класи для змін тем.\n\nconst input = document.querySelector('.checkbox');\n\nconst STYLE_PAGE = 'theme';\ninput.addEventListener('change', handleChange);\n\nfunction handleChange(event) {\n  if (event.target.checked) {\n    document.body.classList.add('dark');\n    localStorage.setItem(STYLE_PAGE, 'dark');\n    document.body.classList.remove('light');\n  } else {\n    document.body.classList.add('light');\n    localStorage.setItem(STYLE_PAGE, 'light');\n    document.body.classList.remove('dark');\n  }\n}\n\nif (localStorage.getItem(STYLE_PAGE) === 'dark') {\n  document.body.classList.add('dark');\n  document.body.classList.remove('light');\n  input.checked = true;\n}\n"],"names":["input","STYLE_PAGE","handleChange","event"],"mappings":"ssBAgJA,MAAMA,EAAQ,SAAS,cAAc,WAAW,EAE1CC,EAAa,QACnBD,EAAM,iBAAiB,SAAUE,CAAY,EAE7C,SAASA,EAAaC,EAAO,CACvBA,EAAM,OAAO,SACf,SAAS,KAAK,UAAU,IAAI,MAAM,EAClC,aAAa,QAAQF,EAAY,MAAM,EACvC,SAAS,KAAK,UAAU,OAAO,OAAO,IAEtC,SAAS,KAAK,UAAU,IAAI,OAAO,EACnC,aAAa,QAAQA,EAAY,OAAO,EACxC,SAAS,KAAK,UAAU,OAAO,MAAM,EAEzC,CAEI,aAAa,QAAQA,CAAU,IAAM,SACvC,SAAS,KAAK,UAAU,IAAI,MAAM,EAClC,SAAS,KAAK,UAAU,OAAO,OAAO,EACtCD,EAAM,QAAU"}